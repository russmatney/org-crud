#+title: These emacs bindings are crazy
#+id: 01075d6f-7cbc-4ad2-8619-2abee59cec9e
#+roam_tags: emacs

#+BEGIN_SRC resigned-to-emacs
Given enough time, the keybindings make sense.
#+END_SRC

* Chords
:PROPERTIES:
:END:
When I heard about 'chords', it felt like:

#+BEGIN_SRC emacs-community
Before you learn about emacs, we're going to learn about music.
#+END_SRC

Once you start doing it, you come to understand the modifier key and letter are
a bit like a duo, and things starts to get better as you invent stories of how
this function came to be.

Later you find [[file:20200715194425-required_emacs_packages.org][M-x + ivy/counsel or helm]] and realize things are going to be ok.
By then you know a few chords and will maybe survive to reach org-mode.

Still though, It's a trek. And I often get C-x C-c / C-x C-s / C-c C-x mixed up,
and I think one of them closes emacs. I stay away from those guys.

* The thing that I really can't stand
:PROPERTIES:
:END:

Is when the emacs docs themselves use the keybindings to reference functions
that have names, and just happen to be mapped to some function somewhere, by
default. Now we've got a plethora of packages taking over each other's finger
territory.

Please reference function names!

* [[file:20200614192040-how_to_find_replace_globally_in_emacs.org][How to find-replace globally in emacs]]
:PROPERTIES:
:END:
* How to Open Today's Note in org-roam
:PROPERTIES:
:END:

SPC m m d t == localleader + m (as in roam) + 'd'ate + 't'oday.

localleader == leader + 'm'ode as a prefix for some mode.

I presume the 'r' after localleader is some other obvious thing.

Typing SPC m and reading the which-key popup reveals that it is 'r' for
 'r'efile.

[[file:20200715194425-required_emacs_packages.org][Which-key popup is an emacs game-changer]].